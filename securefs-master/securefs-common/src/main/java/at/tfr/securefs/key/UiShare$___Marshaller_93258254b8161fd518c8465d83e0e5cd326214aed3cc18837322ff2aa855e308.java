/*
 Generated by org.infinispan.protostream.annotations.impl.processor.MarshallerSourceCodeGenerator
 for class at.tfr.securefs.key.UiShare
*/

package at.tfr.securefs.key;

/**
 * WARNING: Generated code! Do not edit!
 *
 * @private
 */
@javax.annotation.processing.Generated(
   value = "org.infinispan.protostream.annotations.impl.processor.AutoProtoSchemaBuilderAnnotationProcessor",
   comments = "Please do not edit this file!"
)
@SuppressWarnings("all")
public final class UiShare$___Marshaller_93258254b8161fd518c8465d83e0e5cd326214aed3cc18837322ff2aa855e308 extends org.infinispan.protostream.annotations.impl.GeneratedMarshallerBase implements org.infinispan.protostream.ProtobufTagMarshaller<UiShare> {

   @Override
   public Class<UiShare> getJavaClass() { return UiShare.class; }
   
   @Override
   public String getTypeName() { return "UiShare"; }
   
   @Override
   public UiShare read(ReadContext $1) throws java.io.IOException {
      final org.infinispan.protostream.TagReader $in = $1.getReader();
      final UiShare o = new UiShare();
      long __bits$0 = 0;
      boolean done = false;
      while (!done) {
         final int tag = $in.readTag();
         switch (tag) {
            case 0: {
               done = true;
               break;
            }
            case (1 << org.infinispan.protostream.descriptors.WireType.TAG_TYPE_NUM_BITS | org.infinispan.protostream.descriptors.WireType.WIRETYPE_VARINT): {
               int __v$1 = $in.readInt32();
               o.index = __v$1;
               __bits$0 |= 1L;
               break;
            }
            case (2 << org.infinispan.protostream.descriptors.WireType.TAG_TYPE_NUM_BITS | org.infinispan.protostream.descriptors.WireType.WIRETYPE_LENGTH_DELIMITED): {
               String __v$2 = $in.readString();
               o.share = __v$2;
               break;
            }
            case (3 << org.infinispan.protostream.descriptors.WireType.TAG_TYPE_NUM_BITS | org.infinispan.protostream.descriptors.WireType.WIRETYPE_LENGTH_DELIMITED): {
               String __v$3 = $in.readString();
               o.realShare = __v$3;
               break;
            }
            default: {
               if (!$in.skipField(tag)) done = true;
            }
         }
      }
      if ((__bits$0 & 1L) != 1L) {
         final StringBuilder missing = new StringBuilder();
         if ((__bits$0 & 1L) == 0) {
            missing.append("index");
         }
         throw new java.io.IOException("Required field(s) missing from input stream : " + missing);
      }
      return o;
   }
   
   @Override
   public void write(WriteContext $1, UiShare $2) throws java.io.IOException {
      final org.infinispan.protostream.TagWriter $out = $1.getWriter();
      final UiShare o = (UiShare) $2;
      {
         final int __v$1 = o.index;
         $out.writeInt32(1, __v$1);
      }
      {
         final String __v$2 = o.share;
         if (__v$2 != null) $out.writeString(2, __v$2);
      }
      {
         final String __v$3 = o.realShare;
         if (__v$3 != null) $out.writeString(3, __v$3);
      }
   }
}
